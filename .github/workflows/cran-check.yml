name: CRAN Release Check

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

env:
  R_KEEP_PKG_SOURCE: yes
  R_REMOTES_NO_ERRORS_FROM_WARNINGS: true

jobs:
  cran-check:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            r: 'release'
          - os: macos-latest
            r: 'release'
    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential libglib2.0-dev

      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install cmake glib

      - name: Install R package dependencies
        run: |
          install.packages(c("remotes", "rcmdcheck"))
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran(c("devtools", "roxygen2", "spelling", "goodpractice"))

      - name: Build package
        run: |
          devtools::build()

      - name: Run CRAN release check
        run: |
          Rscript scripts/cran_release_check.R

      - name: Upload check results (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cran-check-results-${{ matrix.os }}-${{ matrix.r }}
          path: |
            check.log
            final_check.log
            *.tar.gz
            *.zip

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.os }}-${{ matrix.r }}
          path: |
            *.tar.gz
            *.zip
            build/ 